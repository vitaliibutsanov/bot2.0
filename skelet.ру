import ccxt
import pandas as pd
from ta.momentum import RSIIndicator
from ta.trend import SMAIndicator
import time

# üîê –í–≤–µ–¥–∏ —Å–≤–æ–∏ API-–∫–ª—é—á–∏ —Å—é–¥–∞
api_key = '–¢–í–û–ô_API_KEY'
api_secret = '–¢–í–û–ô_API_SECRET'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
symbol = 'BTC/USDT' # –º–æ–∂–µ—à—å –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ª—é–±—É—é –¥—Ä—É–≥—É—é –ø–∞—Ä—É
timeframe = '1h'
limit = 100

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Binance
exchange = ccxt.binance({
    'apiKey': api_key,
    'secret': api_secret,
    'enableRateLimit': True,
})

def fetch_data():
    print("üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
    ohlcv = exchange.fetch_ohlcv(symbol, timeframe=timeframe, limit=limit)
    df = pd.DataFrame(ohlcv, columns=['timestamp', 'open', 'high', 'low', 'close', 'volume'])
    df['timestamp'] = pd.to_datetime(df['timestamp'], unit='ms')
    return df

def analyze(df):
    df['rsi'] = RSIIndicator(df['close'], window=14).rsi()
    df['sma'] = SMAIndicator(df['close'], window=20).sma_indicator()
    last_rsi = df['rsi'].iloc[-1]
    last_price = df['close'].iloc[-1]
    print(f"üìà –¶–µ–Ω–∞: {last_price:.2f} | RSI: {last_rsi:.2f}")

    if last_rsi < 30:
        print("üîµ RSI < 30: –°–∏–≥–Ω–∞–ª –Ω–∞ –ü–û–ö–£–ü–ö–£")
    elif last_rsi > 70:
        print("üî¥ RSI > 70: –°–∏–≥–Ω–∞–ª –Ω–∞ –ü–†–û–î–ê–ñ–£")
    else:
        print("üü° –ù–µ—Ç —á—ë—Ç–∫–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞")

# –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª (–æ–¥–∏–Ω —Ä–∞–∑)
try:
    df = fetch_data()
    analyze(df)
except Exception as e:
    print("‚ùå –û—à–∏–±–∫–∞:", str(e))