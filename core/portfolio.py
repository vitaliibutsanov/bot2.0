import logging
from datetime import datetime, timedelta

class VirtualPortfolio:
    def __init__(self, initial_balance=1000):
        self.initial_balance = initial_balance
        self.balance = initial_balance
        self.history = []

    def apply_trade(self, pnl_usdt):
        self.balance += pnl_usdt
        self.history.append((datetime.now(), pnl_usdt))
        logging.info(f"VIRTUAL_PNL | {pnl_usdt:.2f} USDT | Balance={self.balance:.2f} USDT")

    def calculate_report(self, days: int):
        cutoff = datetime.now() - timedelta(days=days)
        pnl_sum = sum(p for (t, p) in self.history if t >= cutoff)
        percent = (pnl_sum / self.initial_balance) * 100
        return pnl_sum, percent

    def full_report(self):
        d, dp = self.calculate_report(1)
        w, wp = self.calculate_report(7)
        m, mp = self.calculate_report(30)
        return (
            f"üìä –û—Ç—á—ë—Ç –ø–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º—É –ø–æ—Ä—Ç—Ñ–µ–ª—é:\n"
            f"–ë–∞–ª–∞–Ω—Å: {self.balance:.2f} USDT\n"
            f"24—á: {d:.2f} USDT ({dp:.2f}%)\n"
            f"7–¥: {w:.2f} USDT ({wp:.2f}%)\n"
            f"30–¥: {m:.2f} USDT ({mp:.2f}%)"
        )

virtual_portfolio = VirtualPortfolio(1000)

def get_portfolio_status():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—á—ë—Ç –ø–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º—É –ø–æ—Ä—Ç—Ñ–µ–ª—é.
    –ü–æ–∫–∞ —á—Ç–æ –∑–∞–≥–ª—É—à–∫–∞, –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π —Ä–∞—Å—á—ë—Ç.
    """
    report = (
        "üìä –û—Ç—á—ë—Ç –ø–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º—É –ø–æ—Ä—Ç—Ñ–µ–ª—é:\n"
        "–ë–∞–ª–∞–Ω—Å: 1000.00 USDT\n"
        "24—á: 0.00 USDT (0.00%)\n"
        "7–¥: 0.00 USDT (0.00%)\n"
        "30–¥: 0.00 USDT (0.00%)"
    )
    return report
